rpo:
    source_schema: "ekosystem_rpo"
    command:   "select distinct on(organizations.id) organizations.id as org_id,organization_identifier_entries.ipo as ico,organization_name_entries.name, organizations.established_on,organizations.terminated_on,concat_ws(' ',organization_address_entries.formatted_address,organization_address_entries.street,COALESCE(organization_address_entries.building_number,cast(organization_address_entries.reg_number as text)),organization_address_entries.postal_code,organization_address_entries.municipality,organization_address_entries.country) as address from organizations,organization_identifier_entries,organization_name_entries,organization_address_entries where organizations.id=organization_identifier_entries.organization_id and organizations.id=organization_name_entries.organization_id and organizations.id=organization_address_entries.organization_id"
    save_org_id: true
    is_primary: true
    tables:
            CompanyInfo:
                    columns: ["ico", "established_on", "terminated_on"]
                    create_command: "
                       CREATE TABLE CompanyInfo (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                ico INT4,
                                established_on DATE,
                                terminated_on DATE
                       );
                       CREATE UNIQUE INDEX ON CompanyInfo(eid);
                       CREATE UNIQUE INDEX ON CompanyInfo(ico);
                    "

related:
    source_schema: "ekosystem_rpo"
    command:   "select organization_id as eid_relation,stakeholder_type_id,ico,concat_ws(' ',full_name,person_given_name,person_family_name) as name,concat_ws(' ',address_formatted,address_street,COALESCE(address_building_number,cast(address_reg_number as text)),address_postal_code,address_municipality,address_country) as address,effective_from,effective_to from organization_stakeholder_entries UNION select organization_id as org_id,stakeholder_type_id,ico,concat_ws(' ',full_name,person_given_name,person_family_name) as name,concat_ws(' ',address_formatted,address_street,COALESCE(address_building_number,cast(address_reg_number as text)),address_postal_code,address_municipality,address_country) as address,effective_from,effective_to from organization_statutory_entries"
    use_org_id_as_eid_relation: true
    tables:
            Related:
                    columns: ["stakeholder_type_id", "eid_relation"]
                    create_command: "
                       CREATE TABLE Related (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                stakeholder_type_id INT4,
                                eid_relation INTEGER REFERENCES Entities(id)
                       );
                       CREATE INDEX ON Related(eid);
                       CREATE INDEX ON Related(eid_relation);
                       CREATE UNIQUE INDEX ON Related(eid,stakeholder_type_id,eid_relation)
                    "

notices:
    source_schema: "ekosystem_VVO"
    command:   "select notices.id as notice_id,notices.contract_id,notices.title,notices.contracting_authority_name as name,notices.contracting_authority_cin as ico,notices.estimated_value_amount,notices.estimated_value_currency,notices.bulletin_issue_id,notices.notice_type_id,result_notices.short_description,result_notices.total_final_value_amount,result_notices.total_final_value_currency,raw_notices.body from notices FULL OUTER JOIN result_notices ON result_notices.raw_notice_id = notices.raw_notice_id FULL OUTER JOIN raw_notices ON raw_notices.id=notices.raw_notice_id"
    tables:
            Notices:
                    columns: ["notice_id", "contract_id", "title", "estimated_value_amount",
                    "estimated_value_currency", "bulletin_issue_id", "notice_type_id",
                    "short_description", "total_final_value_amount",
                    "total_final_value_currency", "body"]
                    create_command: "
                       CREATE TABLE Notices (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                notice_id INT4,
                                contract_id INT4,
                                title text,
                                estimated_value_amount INT8,
                                estimated_value_currency text,
                                bulletin_issue_id INT4,
                                notice_type_id INT4,
                                short_description text,
                                total_final_value_amount INT8,
                                total_final_value_currency text,
                                body text
                       );
                       CREATE INDEX ON Notices(eid);
                       CREATE INDEX ON Notices(notice_id);
                       CREATE INDEX ON Notices(contract_id);
                       CREATE INDEX ON Notices(bulletin_issue_id)
                    "
notice_suppliers:
    source_schema: "ekosystem_VVO"
    command:   "select notice_id,name,cin as ico from notice_suppliers"
    tables:
            NoticeSuppliers:
                    columns: ["notice_id"]
                    create_command: "
                       CREATE TABLE NoticeSuppliers (
                                id SERIAL PRIMARY KEY,
                                eid INTEGER REFERENCES Entities(id),
                                notice_id INT4
                       );
                       CREATE INDEX ON NoticeSuppliers(eid);
                       CREATE INDEX ON NoticeSuppliers(notice_id)
                    "

notice_bulletins:
    source_schema: "ekosystem_VVO"
    command:   "select id as bulletin_id,year,number,published_on,source_url from bulletin_issues"
    no_entity_id: true
    tables:
            NoticeBulletins:
                    columns: ["bulletin_id", "year", "number", "published_on", "source_url"]
                    create_command: "
                       CREATE TABLE NoticeBulletins (
                                id SERIAL PRIMARY KEY,
                                bulletin_id INT4,
                                year INT4,
                                number INT4,
                                published_on DATE,
                                source_url text
                       );
                       CREATE INDEX ON NoticeBulletins(bulletin_id)
                    "

